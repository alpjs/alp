{"version":3,"sources":["../../src/components/validatorComponent.js"],"names":[],"mappings":"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","file":"validatorComponent.js","sourcesContent":["// TODO request-params package\n\nimport { defineProperties, defineLazyProperty } from 'object-properties';\n\nclass ParamValueValidator {\n    constructor(validator, name, value) {\n        this.validator = validator;\n        this.name = name;\n        this.value = value;\n    }\n\n    _error(key) {\n        this.validator._error(this.name, key, this.value);\n    }\n}\n\nclass ParamValueStringValidator extends ParamValueValidator {\n    notEmpty() {\n        if (this.value == null || this.value.trim() === '') {\n            this._error('notEmpty');\n        }\n\n        return this;\n    }\n}\n/*\nclass ParamValueModelValidator extends ParamValueValidator {\n    required() {\n        if (this.value == null) {\n            this._error('required');\n        }\n        return this;\n    }\n    valid(fieldsRequired) {\n        if (this.value == null) {\n            return this;\n        }\n        if (S.isString(fieldsRequired)) {\n            fieldsRequired = fieldsRequired.split(' ');\n        }\n        S.forEach(this.value.constructor.Fields, (name, fModel) => {\n            let value = this.value[name];\n            if (fieldsRequired) {\n                if(S.array.has(fieldsRequired, name) && value == null) {\n                    this._error('required');\n                }\n            } else {\n                if (value == null && fModel[1] && fModel[1].required) {\n                    this._error('required');\n                }\n            }\n            //TODO ...\n        });\n        return this;\n    }\n}\n*/\n\nclass ParamValidator {\n    constructor(request) {\n        this.request = request;\n    }\n\n    _error(name, key, value) {\n        if (!this._errors) {\n            this._errors = {};\n        }\n\n        this._errors[name] = { error: key, value: value };\n    }\n\n    getErrors() {\n        return this._errors;\n    }\n\n    hasErrors() {\n        return !!this._errors;\n    }\n\n    isValid() {\n        return !this._errors;\n    }\n\n    string(name, position) {\n        return new ParamValueStringValidator(this, name, this.request.param(name, position));\n    }\n    /*int(name, position) {\n        return new ParamValueIntValidator(this, name, this.request.param(name, position));\n    }\n    model(modelName, name) {\n        name = name || S.string.lcFirst(modelName);\n        console.log('paramvalidator model', modelName, M[modelName]);\n        let data = this.request.getOrPostParam(name);\n        return new ParamValueModelValidator(this, name, !data ? null : new M[modelName](data));\n    }*/\n}\n\nclass ParamValidatorValid extends ParamValidator {\n    _error() {\n        /* #if DEV */\n        console.warn('Invalid params: ', arguments,\n            '\\nRoute=', this.request.route,\n            '\\nGET=', this.request.query,\n            '\\nBody=', this.request.body);\n        /* #/if */\n        throw S.HttpError.notFound(undefined, 'Invalid params');\n    }\n}\n\nexport function extendsHttpRequestPrototype(HttpRequestPrototype) {\n    defineProperties(HttpRequestPrototype, {\n        param(name) {\n            return this.namedParam(name) || this.paramGET(name);\n        },\n\n        namedParam(name) {\n            let namedParams = this.route.namedParams;\n            return namedParams && namedParams.get(name);\n        },\n\n        otherParam(position) {\n            let otherParams = this.route.otherParams;\n            return otherParams && otherParams[position - 1];\n        },\n\n        paramGET(name) {\n            let query = this.query;\n            return query && query[name];\n        },\n\n        paramGETorPOST(name) {\n            return this.body[name] !== undefined ? this.body[name] : this.query[name];\n        },\n    });\n\n    defineLazyProperty(HttpRequestPrototype, 'params', function() {\n        return new ParamValidator(this);\n    });\n\n    defineLazyProperty(HttpRequestPrototype, 'validParams', function() {\n        return new ParamValidatorValid(this);\n    });\n};\n"]}