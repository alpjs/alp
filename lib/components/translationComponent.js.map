{"version":3,"sources":["../../src/components/translationComponent.js"],"names":[],"mappings":";;;;;;;;;;;;gCAAmD,mBAAmB;;;;;;;;;;;;AAS/D,SAAS,MAAM,CAAC,MAAM,EAAW;sCAAN,IAAI;AAAJ,YAAI;;;AAClC,WAAO,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;CAChC;;AAAA,CAAC;;;;;;;;;;;;AASK,SAAS,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE;AAClC,QAAI,CAAC,GAAG,CAAC,CAAC;AACV,WAAO,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,UAAC,CAAC;eAAK,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE;KAAA,CAAC,CAAC;CACxD;;AAAA,CAAC;;;;AAEK,SAAS,UAAU,CAAC,GAAG,EAAE;AAC5B,OAAG,CAAC,YAAY,GAAG,UAAS,CAAC;AAC7B,OAAG,CAAC,MAAM,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC,UAAA,QAAQ,EAAI;AACrD,WAAG,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,UAAU,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC;KACzE,CAAC,CAAC;CACN;;;;AAEM,SAAS,2BAA2B,CAAC,oBAAoB,EAAE;AAC9D,0CAAe,oBAAoB,EAAE,GAAG;;4FAAE,UAAS,MAAM,EAAW;AAChE,eAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACnC,cAAM,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC;;2CAFtB,IAAI;AAAJ,gBAAI;;;AAG9D,eAAO,IAAI,GAAG,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC;KAChD,CAAC,CAAC;CACN","file":"translationComponent.js","sourcesContent":["import { defineProperty, defineLazyProperty } from 'object-properties';\n\n/**\n * Format a string using %s\n *\n * @param {String} string\n * @param {...String} args\n * @return {String}\n */\nexport function format(string, ...args) {\n    return vformat(string, args);\n};\n\n/**\n * Format a string using %s\n *\n * @param {String} string\n * @param {string[]} args\n * @return {String}\n */\nexport function vformat(string, args) {\n    var i = 0;\n    return string.replace(/%s/g, (m) => args[i++] || '');\n};\n\nexport function initialize(app) {\n    app.translations = new Map();\n    app.config.get('availableLanguages').forEach(language => {\n        app.translations.set(language, app.loadConfig('locales/' + language));\n    });\n}\n\nexport function extendsHttpContextPrototype(HttpContextPrototype) {\n    defineProperty(HttpContextPrototype, 't', function(string, ...args) {\n        console.log(this.request.language);\n        string = this.app.translations.get(this.request.language).get(string) || string;\n        return args ? vformat(string, args) : string;\n    });\n}\n"]}