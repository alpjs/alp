{"version":3,"sources":["../../src/http/HttpServerRequest.js"],"names":[],"mappings":"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","file":"HttpServerRequest.js","sourcesContent":["import { defineProperty, defineLazyProperty } from 'object-properties';\nimport { IncomingMessage, STATUS_CODES } from 'http';\n\nimport { preferredLanguages } from 'negotiator/lib/language';\nimport { preferredMediaTypes } from 'negotiator/lib/mediaType';\n\nimport bodyParser from 'body-parser';\n\nconst urlencodedBodyParser = bodyParser.urlencoded({ extended: false });\nconst jsonBodyParser = bodyParser.json();\n\ndefineLazyProperty(IncomingMessage.prototype, 'language', function() {\n    let languages = preferredLanguages(this.headers['accept-language'], this.app.config.get('availableLanguages'));\n    return languages && languages[0] || 'em';\n});\n\ndefineLazyProperty(IncomingMessage.prototype, 'ieVersion', function() {\n    let ua = this.headers['user-agent'];\n\n    if (!ua) {\n        return () => false;\n    }\n\n    let m = ua.match(/MSIE ([\\d\\.]+)/i);\n\n    if (!m) {\n        return () => false;\n    }\n\n    const value = m[1];\n    return () => value;\n});\n\ndefineProperty(IncomingMessage.prototype, 'isIElt7', function() { () => this.ieVersion < 7; });\ndefineProperty(IncomingMessage.prototype, 'isIElt8', function() { () => this.ieVersion < 8; });\ndefineProperty(IncomingMessage.prototype, 'isIElt9', function() { () => this.ieVersion < 9; });\n\ndefineProperty(IncomingMessage.prototype, 'accepts', function(types) {\n    return preferredMediaTypes(this.headers.accept, types);\n});\n\ndefineProperty(IncomingMessage.prototype, 'parseBody', function() {\n    if (this.body) {\n        throw new Error('Request is already parsed');\n    }\n\n    return new Promise((resolve, reject) => {\n        urlencodedBodyParser(this, this.response, (err) => {\n            if (err) {\n                return reject(err);\n            }\n\n            return resolve();\n        });\n    });\n});\n\ndefineProperty(IncomingMessage.prototype, 'parseJsonBody', function() {\n    if (this.body) {\n        throw new Error('Request is already parsed');\n    }\n\n    return new Promise((resolve, reject) => {\n        jsonBodyParser(this, this.response, (err) => {\n            if (err) {\n                return reject(err);\n            }\n\n            return resolve();\n        });\n    });\n});\n\ndefineLazyProperty(IncomingMessage.prototype, 'isHttps', function() {\n    if (!this.app.config.get('behindProxy')) {\n        return this.connection.encrypted;\n    }\n\n    if (this.headers['x-forwarded-proto'] === 'https') {\n        return true;\n    }\n\n    return false;\n});\n\ndefineLazyProperty(IncomingMessage.prototype, 'hostname', function() {\n    let host = this.headers[!this.app.config.get('behindProxy') ? 'host' : 'x-forwarded-host'];\n\n    if (!host) {\n        throw new Error('Header host not set');\n    }\n\n    return host.split(':')[0];\n});\n"]}