{"version":3,"sources":["../../src/application/server.js"],"names":[],"mappings":";;;;;;;kBAAwD,IAAI;;oBACX,MAAM;;8BAChB,kBAAkB;;;;AAElD,SAAS,YAAY,CAAC,GAAG,EAAE;AAC9B,UAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;;AAEnC,UAAM,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAChD,UAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACpC,UAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;;AAE5C,OAAG,CAAC,MAAM,CAAC,IAAI,CACX,iBAAiB,EACjB,UAAU,GAAG,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EACxD,EAAE,CAAC,UAAU,GAAG,YAAY,GAAG,MAAM,GAAG,CAAC,QAAQ,CAAC,EAAE,CACvD,CAAC;;AAEF,QAAI,UAAU,EAAE;AACZ,YAAI;AACA,gCAAW,UAAU,CAAC,CAAC;SAC1B,CAAC,OAAO,GAAG,EAAE,EACb;KACJ;;AAED,UAAM,MAAM,GAAG,wBAAiB,4CAAuB,GAAG,CAAC,CAAC,CAAC;;AAE7D,UAAM,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,EAAE,QAAQ,kBAAE,YAAW;AACnD,YAAI,UAAU,EAAE;AACZ,+BAAU,UAAU,EAAE,KAAK,CAAC,CAAC;SAChC;AACD,WAAG,CAAC,MAAM,CAAC,IAAI,CACX,kBAAkB,EAClB,UAAU,GAAG,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EACxD,EAAE,CAAC,UAAU,GAAG,YAAY,GAAG,MAAM,GAAG,CAAC,QAAQ,CAAC,EAAE,CACvD,CAAC;KACL,CAAC,CAAC;CACN","file":"server.js","sourcesContent":["import { chmodSync, unlinkSync, createReadStream } from 'fs';\nimport { createServer as createHttpServer } from 'http';\nimport { createRequestProcessor } from './processRequest';\n\nexport function createServer(app) {\n    const publicDir = app.paths.public;\n\n    const socketPath = app.config.get('socketPath');\n    const port = app.config.get('port');\n    const hostname = app.config.get('hostname');\n\n    app.logger.info(\n        'Creating server',\n        socketPath ? { socketPath: socketPath } : { port: port },\n        { [socketPath ? 'socketPath' : 'port']: ['yellow'] }\n    );\n\n    if (socketPath) {\n        try {\n            unlinkSync(socketPath);\n        } catch (err) {\n        }\n    }\n\n    const server = createHttpServer(createRequestProcessor(app));\n\n    server.listen(socketPath || port, hostname, function() {\n        if (socketPath) {\n            chmodSync(socketPath, '777');\n        }\n        app.logger.info(\n            'Server listening',\n            socketPath ? { socketPath: socketPath } : { port: port },\n            { [socketPath ? 'socketPath' : 'port']: ['yellow'] }\n        );\n    });\n}\n"]}