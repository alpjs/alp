{"version":3,"sources":["../../src/application/processRequest.js"],"names":[],"mappings":";;;;;;;;;;;kBAAiC,IAAI;;mBACH,KAAK;;kBACG,IAAI;;6BACxB,mBAAmB;;;;kCACd,wBAAwB;;;;;;AAE5C,SAAS,sBAAsB,CAAC,GAAG,EAAE;AACxC,UAAM,KAAK;;;;mCAAG,eAAS,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAK,EAAE;AACrD,YAAI,CAAC,MAAK,CAAC,IAAI,EAAE;AACb,kBAAK,GAAG,4BACJ,MAAK,IAAI,MAAK,CAAC,MAAM,IAAI,MAAM,EAC/B,MAAK,IAAI,MAAK,CAAC,OAAO,IAAI,MAAK,EAC/B,SAAS,EACT,MAAK,CACR,CAAC;SACL;;AAED,gBAAQ,CAAC,SAAS,CAAC,MAAK,CAAC,CAAC;KAC7B,CAAC;;AAEF,WAAO,UAAC,OAAO,EAAE,QAAQ,EAAK;;AAE1B,cAAM,SAAS,GAAG,gBAAS,OAAO,CAAC,GAAG,CAAC,CAAC;AACxC,cAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;;AAEpC,YAAI,QAAQ,KAAK,cAAc,EAAE;AAC7B,eAAG,CAAC,KAAK,CACL,IAAI,EACJ,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,EACpC,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE,CAC3C,CAAC;;AAEF,mBAAO,0BAAiB,SAAS,GAAG,aAAa,CAAC,CAC7C,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,CACrD,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvB;;AAED,YAAI,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AAC9B,eAAG,CAAC,KAAK,CACL,IAAI,EACJ,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,QAAQ,EAAE,EACpC,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE,CAC3C,CAAC;;AAEF,gBAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AAC3B,uBAAO,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,GAAG,eAAe,CAAC,CAAC;aACpE;;AAED,mBAAO,0BAAiB,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAClD,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,CACrD,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvB;;AAED,cAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;;AAE3B,eAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AAClB,eAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,gBAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;;AAE3B,YAAI,SAAS,CAAC,KAAK,EAAE;AACjB,mBAAO,CAAC,KAAK,GAAG,eAAiB,SAAS,CAAC,KAAK,CAAC,CAAC;SACrD;;AAED,YAAI,KAAK,CAAC;;AAEV,YAAI;AACA,iBAAK,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACrC,CAAC,OAAO,GAAG,EAAE;AACV,mBAAO,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;SAC7C;;AAED,YAAI,CAAC,KAAK,EAAE;AACR,mBAAO,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,mBAAmB,GAAG,QAAQ,CAAC,CAAC;SACxE;;AAED,cAAM,UAAU,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AACzD,YAAI,CAAC,UAAU,EAAE;AACb,mBAAO,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,wBAAwB,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;SACrF;;AAED,eAAO,CAAC,KAAK,GAAG,KAAK,CAAC;;AAEtB,cAAM,OAAO,GAAG,iCAAmB,OAAO,EAAE,QAAQ,CAAC,CAAC;;AAEtD,iBAAQ,OAAO,CACX,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,CACrD,CAAC,KAAK,CAAC,UAAA,GAAG;mBAAI,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,CAAC;SAAA,CAAC,CACjD,IAAI,CAAC,YAAM;AACR,gBAAI,MAAM,GAAG,AAAC,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,GAAI,IAAI,CAAC;AAC3C,gBAAI,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;;AAErC,gBAAI,gBAAgB,CAAC;AACrB,gBAAI,UAAU,GAAG,GAAG,EAAE;AAClB,gCAAgB,GAAG,EAAE,CAAC;aACzB,MAAM,IAAI,UAAU,GAAG,GAAG,EAAE;AACzB,gCAAgB,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;aACxC,MAAM,IAAI,UAAU,GAAG,GAAG,EAAE;AACzB,gCAAgB,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;aACvC,MAAM,IAAI,UAAU,GAAG,GAAG,EAAE;AACzB,gCAAgB,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;aAC7C,MAAM,IAAI,UAAU,GAAG,GAAG,EAAE;AACzB,gCAAgB,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aACzC;;AAED,eAAG,CAAC,MAAM,CAAC,IAAI,CACX,iBAAiB,EACjB,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,EACxD;AACI,0BAAU,EAAE,gBAAgB;AAC5B,wBAAQ,EAAE,CAAC,SAAS,CAAC;AACrB,oBAAI,EAAE,CAAC,MAAM,CAAC;aACjB,CACJ,CAAC;SACL,CAAC,CAAC;KACN,CAAC;CACL","file":"processRequest.js","sourcesContent":["import { createReadStream } from 'fs';\nimport { parse as parseUrl } from 'url';\nimport { parse as parseQueryString } from 'qs';\nimport HttpError from '../http/HttpError';\nimport RequestContext from '../http/RequestContext';\n\nexport function createRequestProcessor(app) {\n    const error = function(request, response, status, error) {\n        if (!error.code) {\n            error = new HttpError(\n                error && error.status || status,\n                error && error.message || error,\n                undefined,\n                error\n            );\n        }\n\n        response.httpError(error);\n    };\n\n    return (request, response) => {\n        // TODO put parsed Url somewhere in request.\n        const parsedUrl = parseUrl(request.url);\n        const pathname = parsedUrl.pathname;\n\n        if (pathname === '/favicon.ico') {\n            app.debug(\n                null,\n                { method: request.method, pathname },\n                { method: ['gray'], pathname: ['gray'] }\n            );\n\n            return createReadStream(publicDir + 'favicon.ico')\n                .on('error', error.bind(null, request, response, 404))\n                .pipe(response);\n        }\n\n        if (pathname.startsWith('/web/')) {\n            app.debug(\n                null,\n                { method: request.method, pathname },\n                { method: ['gray'], pathname: ['gray'] }\n            );\n\n            if (pathname.includes('/../')) {\n                return error(request, response, 400, pathname + 'contains /../');\n            }\n\n            return createReadStream(publicDir + pathname.substr(5))\n                .on('error', error.bind(null, request, response, 404))\n                .pipe(response);\n        }\n\n        const started = Date.now();\n\n        request.app = app;\n        request.response = response;\n        response.request = request;\n\n        if (parsedUrl.query) {\n            request.query = parseQueryString(parsedUrl.query);\n        }\n\n        let route;\n\n        try {\n            route = app.router.find(pathname);\n        } catch (err) {\n            return error(request, response, 500, err);\n        }\n\n        if (!route) {\n            return error(request, response, 404, 'Route not found: ' + pathname);\n        }\n\n        const controller = app.controllers.get(route.controller);\n        if (!controller) {\n            return error(request, response, 404, 'Controller not found: ' + route.controller);\n        }\n\n        request.route = route;\n\n        const context = new RequestContext(request, response);\n\n        Promise.resolve(\n            context.callAction(route.controller, route.action)\n        ).catch(err => error(request, response, 500, err))\n        .then(() => {\n            var timeMs = (Date.now() - started) + 'ms';\n            var statusCode = response.statusCode;\n\n            var stylesStatusCode;\n            if (statusCode < 200) {\n                stylesStatusCode = [];\n            } else if (statusCode < 300) {\n                stylesStatusCode = ['green', 'bold'];\n            } else if (statusCode < 400) {\n                stylesStatusCode = ['blue', 'bold'];\n            } else if (statusCode < 500) {\n                stylesStatusCode = ['bgMagenta', 'white'];\n            } else if (statusCode < 600) {\n                stylesStatusCode = ['bgRed', 'white'];\n            }\n\n            app.logger.info(\n                'Request handled',\n                { method: request.method, statusCode, pathname, timeMs },\n                {\n                    statusCode: stylesStatusCode,\n                    pathname: ['magenta'],\n                    time: ['blue'],\n                }\n            );\n        });\n    };\n}\n"]}