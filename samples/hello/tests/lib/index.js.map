{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;iCAAqC,oBAAoB;;yBACvC,YAAY;;;;sBACF,QAAQ;;AAEpC,KAAK,CAAC,mBAAmB,kBAAE,YAAW;AAClC,QAAI,MAAM,GAAG,6BAAa,CACtB,WAAW,EACX,cAAc,EACd,cAAc,EACd,QAAQ,EACR,IAAI,CACP,CAAC,CAAC;;AAEH,cAAU,CAAC,UAAC,IAAI,EAAK;AACjB,cAAM,CAAC,KAAK,EAAE,CAAC;AACf,cAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,IAAI,EAAK;AAC1B,gBAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;AAC3C,gBAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;AACpC,oBAAI,IAAI,EAAE;AACN,wBAAI,EAAE,CAAC;iBACV;;AAED,uBAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;aACjC;SACJ,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,iBAAa,CAAC,YAAM;AAChB,cAAM,CAAC,IAAI,EAAE,CAAC;KACjB,CAAC,CAAC;;AAEH,QAAI,CAAC,oBAAoB,EAAE,YAAM;AAC7B,eAAO,yBAAM,wBAAwB,CAAC,CACjC,IAAI,CAAC,UAAA,GAAG;mBAAI,GAAG,CAAC,IAAI,EAAE;SAAA,CAAC,CACvB,IAAI,CAAC,UAAA,GAAG,EAAI;AACT,qCAAY,GAAG,EAAE,cAAc,CAAC,CAAC;SACpC,CAAC,CAAC;KACV,CAAC,CAAC;;AAEH,QAAI,CAAC,iBAAiB,EAAE,YAAM;AAC1B,eAAO,yBAAM,mCAAmC,CAAC,CAC5C,IAAI,CAAC,UAAA,GAAG;mBAAI,GAAG,CAAC,IAAI,EAAE;SAAA,CAAC,CACvB,IAAI,CAAC,UAAA,GAAG,EAAI;AACT,qCAAY,GAAG,EAAE,cAAc,CAAC,CAAC;SACpC,CAAC,CAAC;KACV,CAAC,CAAC;CACN,CAAC,CAAC","file":"index.js","sourcesContent":["import { node as createDaemon } from 'springbokjs-daemon';\nimport fetch from 'node-fetch';\nimport { strictEqual } from 'assert';\n\nsuite('test hello server', function() {\n    let daemon = createDaemon([\n        '--harmony',\n        '--es_staging',\n        'lib/index.js',\n        '--port',\n        5555,\n    ]);\n\n    suiteSetup((done) => {\n        daemon.start();\n        daemon.on('stdout', (data) => {\n            let string = data.toString().toLowerCase();\n            if (string.indexOf('listening') !== -1) {\n                if (done) {\n                    done();\n                }\n\n                console.log('Server started');\n            }\n        });\n    });\n\n    suiteTeardown(() => {\n        daemon.stop();\n    });\n\n    test('hello without name', () => {\n        return fetch('http://localhost:5555/')\n            .then(res => res.text())\n            .then(res => {\n                strictEqual(res, 'Hello World!');\n            });\n    });\n\n    test('hello with name', () => {\n        return fetch('http://localhost:5555/?name=Chris')\n            .then(res => res.text())\n            .then(res => {\n                strictEqual(res, 'Hello Chris!');\n            });\n    });\n});\n"]}